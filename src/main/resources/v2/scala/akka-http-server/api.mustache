package {{package}}

import akka.http.scaladsl.server.Directives._
import akka.http.scaladsl.server.Route
import {{invokerPackage}}.AkkaHttpHelper._

{{#operations}}
class {{classname}}(
    {{classVarName}}Service: {{classname}}Service
) {

  {{#operation}}

  lazy val route: Route =
      path({{#vendorExtensions.paths}}{{#isText}}"{{/isText}}{{value}}{{#isText}}"{{/isText}}{{#hasMore}} / {{/hasMore}}{{/vendorExtensions.paths}}) { {{#pathParams.size}}({{/pathParams.size}}{{#pathParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/pathParams}}{{#pathParams.size}}) => {{/pathParams.size}}
        {{vendorExtensions.lowercaseHttpMethod}} {
            complete{
                {{classVarName}}Service.{{operationId}}({{#pathParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/pathParams}})
            }
        }
      }
  {{/operation}}
}

trait {{classname}}Service {

{{#operation}}
  def {{operationId}}({{#vendorExtensions.matchedPathParams}}{{paramName}}: {{dataType}}{{#hasMore}}, {{/hasMore}}{{/vendorExtensions.matchedPathParams}}): {{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}Unit{{/returnType}}

{{/operation}}

}
{{/operations}}
